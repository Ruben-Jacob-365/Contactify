{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\Ruben\\\\Coding\\\\React\\\\contact-app\\\\src\\\\context\\\\ContactsCrudContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport api from \"../api/contacts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contactsCrud = /*#__PURE__*/createContext();\nexport function ContactsCrudProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [contacts, setContacts] = useState([]);\n  const getContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) {\n      setContacts(response.data);\n    }\n  };\n  const value = {\n    contacts,\n    getContacts\n  };\n  return /*#__PURE__*/_jsxDEV(contactsCrud.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n_s(ContactsCrudProvider, \"FESz+sDzq5vJxunNDUykF5PRzp0=\");\n_c = ContactsCrudProvider;\nexport function useContactsCrud() {\n  _s2();\n  return useContext(contactsCrud);\n}\n_s2(useContactsCrud, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ContactsCrudProvider\");","map":{"version":3,"names":["createContext","useContext","useState","api","jsxDEV","_jsxDEV","contactsCrud","ContactsCrudProvider","_ref","_s","children","contacts","setContacts","getContacts","response","get","data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useContactsCrud","_s2","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/Ruben/Coding/React/contact-app/src/context/ContactsCrudContext.js"],"sourcesContent":["import { createContext, useContext,useState } from \"react\";\r\nimport api from \"../api/contacts\"\r\n\r\nconst contactsCrud = createContext();\r\n\r\nexport function ContactsCrudProvider({children}) {\r\n    const [contacts,setContacts] = useState([]);\r\n\r\n    const getContacts = async () => {\r\n        const response = await api.get(\"/contacts\");\r\n        if(response.data){\r\n          setContacts(response.data);\r\n        }\r\n    };\r\n\r\n    const value={\r\n        contacts,\r\n        getContacts\r\n    }\r\n    return <contactsCrud.Provider value={value}>\r\n        {children}\r\n    </contactsCrud.Provider>\r\n}\r\n\r\nexport function useContactsCrud() {\r\n    return useContext(contactsCrud);\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAACC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,GAAG,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,SAASO,oBAAoBA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC3C,MAAM,CAACG,QAAQ,EAACC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,WAAW,CAAC;IAC3C,IAAGD,QAAQ,CAACE,IAAI,EAAC;MACfJ,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC5B;EACJ,CAAC;EAED,MAAMC,KAAK,GAAC;IACRN,QAAQ;IACRE;EACJ,CAAC;EACD,oBAAOR,OAAA,CAACC,YAAY,CAACY,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAP,QAAA,EACtCA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAC5B;AAACb,EAAA,CAjBeF,oBAAoB;AAAAgB,EAAA,GAApBhB,oBAAoB;AAmBpC,OAAO,SAASiB,eAAeA,CAAA,EAAG;EAAAC,GAAA;EAC9B,OAAOxB,UAAU,CAACK,YAAY,CAAC;AACnC;AAACmB,GAAA,CAFeD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}