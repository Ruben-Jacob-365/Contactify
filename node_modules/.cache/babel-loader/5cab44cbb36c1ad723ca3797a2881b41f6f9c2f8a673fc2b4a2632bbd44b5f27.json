{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\Ruben\\\\Coding\\\\React\\\\contact-app\\\\src\\\\context\\\\ContactsCrudContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport api from \"../api/contacts\";\nimport { uuid } from \"uuidv4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contactsCrudContext = /*#__PURE__*/createContext();\nexport function ContactsCrudContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [contacts, setContacts] = useState([]);\n  const [contact, setContact] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  //RetrieveContacts\n  const getContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) {\n      setContacts(response.data);\n    }\n  };\n  const addContactHandler = async contact => {\n    const request = {\n      id: uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n  const updateContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const {\n      id\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? {\n        ...response.data\n      } : contact;\n    }));\n  };\n  const searchHandler = searchTerm => {\n    setText(searchTerm);\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter(contact => {\n        console.log(contact);\n        return Object.values(contact).join(\" \").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n  const value = {\n    contact,\n    contacts,\n    getContacts,\n    addContactHandler,\n    removeContactHandler,\n    updateContactHandler,\n    searchHandler,\n    text,\n    searchResults\n  };\n  return /*#__PURE__*/_jsxDEV(contactsCrudContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(ContactsCrudContextProvider, \"mTpHIvxo9bIDoZ1NixzN1t0nIdc=\");\n_c = ContactsCrudContextProvider;\nexport function useContactsCrud() {\n  _s2();\n  return useContext(contactsCrudContext);\n}\n_s2(useContactsCrud, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ContactsCrudContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","api","uuid","jsxDEV","_jsxDEV","contactsCrudContext","ContactsCrudContextProvider","_ref","_s","children","contacts","setContacts","contact","setContact","text","setText","searchResults","setSearchResults","getContacts","response","get","data","addContactHandler","request","id","post","removeContactHandler","delete","newContactList","filter","updateContactHandler","put","map","searchHandler","searchTerm","console","log","Object","values","join","toLowerCase","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useContactsCrud","_s2","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/Ruben/Coding/React/contact-app/src/context/ContactsCrudContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport api from \"../api/contacts\";\r\nimport { uuid } from \"uuidv4\";\r\n\r\nconst contactsCrudContext = createContext();\r\n\r\nexport function ContactsCrudContextProvider({children}) {\r\n    const [contacts, setContacts] = useState([]);\r\n    const [contact, setContact] = useState([]);\r\n    const [text, setText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    //RetrieveContacts\r\n  const getContacts = async () => {\r\n    const response = await api.get(\"/contacts\");\r\n    if (response.data) {\r\n      setContacts(response.data);\r\n    } \r\n  };\r\n\r\n  const addContactHandler = async (contact) => {\r\n    const request = {\r\n      id: uuid(),\r\n      ...contact,\r\n    };\r\n    const response = await api.post(\"/contacts\", request);\r\n    setContacts([...contacts, response.data]);\r\n  };\r\n\r\n  const removeContactHandler = async (id) => {\r\n    await api.delete(`/contacts/${id}`);\r\n    const newContactList = contacts.filter((contact) => {\r\n      return contact.id !== id;\r\n    });\r\n\r\n    setContacts(newContactList);\r\n  };\r\n\r\n  const updateContactHandler = async (contact) => {\r\n    const response = await api.put(`/contacts/${contact.id}`, contact);\r\n    const { id } = response.data;\r\n    setContacts(\r\n      contacts.map((contact) => {\r\n        return contact.id === id ? { ...response.data } : contact;\r\n      })\r\n    );\r\n  };\r\n\r\n  const searchHandler = (searchTerm) => {\r\n    setText(searchTerm);\r\n    if (searchTerm !== \"\") {\r\n      const newContactList = contacts.filter((contact) => {\r\n        console.log(contact);\r\n        return Object.values(contact)\r\n          .join(\" \")\r\n          .toLowerCase()\r\n          .includes(searchTerm.toLowerCase());\r\n      });\r\n      setSearchResults(newContactList);\r\n    }else {\r\n      setSearchResults(contacts);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    contact,\r\n    contacts,\r\n    getContacts,\r\n    addContactHandler,\r\n    removeContactHandler,\r\n    updateContactHandler,\r\n    searchHandler,\r\n    text,\r\n    searchResults\r\n  }\r\n\r\n    return (\r\n        <contactsCrudContext.Provider value={ value }>\r\n            {children}\r\n        </contactsCrudContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useContactsCrud() {\r\n    return useContext(contactsCrudContext)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}