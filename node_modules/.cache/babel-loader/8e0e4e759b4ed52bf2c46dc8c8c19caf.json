{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\Ruben\\\\Coding\\\\React\\\\contact-app\\\\src\\\\context\\\\ContactsCrudContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useCallback } from \"react\";\nimport api from \"../api/contacts\";\nimport { uuid } from \"uuidv4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contactsCrudContext = /*#__PURE__*/createContext();\nexport function ContactsCrudContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [contacts, setContacts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const getContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) {\n      setContacts(response.data);\n    }\n  };\n  const addContactHandler = async contact => {\n    const request = {\n      id: uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    console.log(request);\n    console.log(response.data);\n    setContacts([...contacts, response.data]);\n  };\n  const editContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const {\n      id\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? {\n        ...response.data\n      } : contact;\n    }));\n  };\n  const searchHandler = search => {\n    setSearch(search);\n    if (search !== \"\") {\n      const newContactList = contacts.filter(contact => {\n        return Object.values(contact).join(\" \").toLowerCase().includes(search.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => contact.id !== id);\n    setContacts(newContactList);\n  };\n  const value = {\n    contacts,\n    search,\n    searchResults,\n    getContacts,\n    removeContactHandler,\n    addContactHandler,\n    editContactHandler,\n    searchHandler\n  };\n  return /*#__PURE__*/_jsxDEV(contactsCrudContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n}\n_s(ContactsCrudContextProvider, \"BuEg31VKCzSXX7IvTCxqObzGMc8=\");\n_c = ContactsCrudContextProvider;\nexport function useContactsCrud() {\n  _s2();\n  return useContext(contactsCrudContext);\n}\n_s2(useContactsCrud, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n;\nvar _c;\n$RefreshReg$(_c, \"ContactsCrudContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useCallback","api","uuid","jsxDEV","_jsxDEV","contactsCrudContext","ContactsCrudContextProvider","_ref","_s","children","contacts","setContacts","search","setSearch","searchResults","setSearchResults","getContacts","response","get","data","addContactHandler","contact","request","id","post","console","log","editContactHandler","put","map","searchHandler","newContactList","filter","Object","values","join","toLowerCase","includes","removeContactHandler","delete","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useContactsCrud","_s2","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/Ruben/Coding/React/contact-app/src/context/ContactsCrudContext.js"],"sourcesContent":["import { createContext, useContext,useState,useCallback } from \"react\";\r\nimport api from \"../api/contacts\"\r\nimport { uuid } from \"uuidv4\";\r\n\r\nconst contactsCrudContext = createContext();\r\n\r\nexport function ContactsCrudContextProvider({children}) {\r\n    const [contacts,setContacts] = useState([]);\r\n    const [search,setSearch] = useState(\"\");\r\n    const [searchResults,setSearchResults] = useState([]);\r\n\r\n    const getContacts = async () => {\r\n        const response = await api.get(\"/contacts\");\r\n        if(response.data){\r\n          setContacts(response.data);\r\n        }\r\n    };\r\n\r\n    const addContactHandler = async (contact) => {\r\n        const request = {\r\n          id: uuid(),\r\n          ...contact,\r\n        };\r\n        const response = await api.post(\"/contacts\", request);\r\n        console.log(request);\r\n        console.log(response.data);\r\n        setContacts([...contacts, response.data]);\r\n    };\r\n\r\n    const editContactHandler = async (contact) => {\r\n        const response = await api.put(`/contacts/${contact.id}`,contact);\r\n        const {id} = response.data;\r\n        setContacts(contacts.map((contact) => {\r\n          return contact.id === id ? {...response.data} : contact;\r\n        })\r\n        );\r\n    };\r\n\r\n    const searchHandler = (search) => {\r\n        setSearch(search);\r\n        if(search !== \"\"){\r\n            const newContactList = contacts.filter((contact) => {\r\n                return Object.values(contact).join(\" \").toLowerCase().includes(search.toLowerCase());\r\n            });\r\n            setSearchResults(newContactList);\r\n        }\r\n        else {\r\n            setSearchResults(contacts);\r\n        }\r\n    }\r\n\r\n    const removeContactHandler = async (id) => {\r\n        await api.delete(`/contacts/${id}`);\r\n        const newContactList = contacts.filter((contact) =>  contact.id !== id\r\n        );\r\n    \r\n        setContacts(newContactList);\r\n    };\r\n\r\n    const value={\r\n        contacts,\r\n        search,\r\n        searchResults,\r\n        getContacts,\r\n        removeContactHandler,\r\n        addContactHandler,\r\n        editContactHandler,\r\n        searchHandler,\r\n    }\r\n    return <contactsCrudContext.Provider value={value}>\r\n        {children}\r\n    </contactsCrudContext.Provider>\r\n}\r\n\r\nexport function useContactsCrud() {\r\n    return useContext(contactsCrudContext);\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}