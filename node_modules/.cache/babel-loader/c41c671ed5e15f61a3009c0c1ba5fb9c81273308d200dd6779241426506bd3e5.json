{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\Ruben\\\\Coding\\\\React\\\\contact-app\\\\src\\\\context\\\\ContactsCrudContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport api from \"../api/contacts\";\nimport { uuid } from \"uuidv4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contactsCrudContext = /*#__PURE__*/createContext();\nexport function ContactsCrudContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [contacts, setContacts] = useState([]);\n  const getContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) {\n      setContacts(response.data);\n    }\n  };\n  const addContactHandler = async contact => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      ...contacts\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n  const editContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const {\n      id\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? {\n        ...response.data\n      } : contact;\n    }));\n  };\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => contact.id !== id);\n    setContacts(newContactList);\n  };\n  const value = {\n    contacts,\n    getContacts,\n    removeContactHandler,\n    addContactHandler,\n    editContactHandler\n  };\n  return /*#__PURE__*/_jsxDEV(contactsCrudContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n}\n_s(ContactsCrudContextProvider, \"FESz+sDzq5vJxunNDUykF5PRzp0=\");\n_c = ContactsCrudContextProvider;\nexport function useContactsCrud() {\n  _s2();\n  return useContext(contactsCrudContext);\n}\n_s2(useContactsCrud, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ContactsCrudContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","api","uuid","jsxDEV","_jsxDEV","contactsCrudContext","ContactsCrudContextProvider","_ref","_s","children","contacts","setContacts","getContacts","response","get","data","addContactHandler","contact","console","log","request","id","post","editContactHandler","put","map","removeContactHandler","delete","newContactList","filter","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useContactsCrud","_s2","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/Ruben/Coding/React/contact-app/src/context/ContactsCrudContext.js"],"sourcesContent":["import { createContext, useContext,useState } from \"react\";\r\nimport api from \"../api/contacts\"\r\nimport { uuid } from \"uuidv4\";\r\n\r\nconst contactsCrudContext = createContext();\r\n\r\nexport function ContactsCrudContextProvider({children}) {\r\n    const [contacts,setContacts] = useState([]);\r\n\r\n    const getContacts = async () => {\r\n        const response = await api.get(\"/contacts\");\r\n        if(response.data){\r\n          setContacts(response.data);\r\n        }\r\n    };\r\n\r\n    const addContactHandler = async (contact) => {\r\n        console.log(contact);\r\n        const request = {\r\n          id: uuid(),\r\n          ...contacts\r\n        };\r\n        const response = await api.post(\"/contacts\", request);\r\n        setContacts([...contacts, response.data]);\r\n    };\r\n\r\n    const editContactHandler = async (contact) => {\r\n        const response = await api.put(`/contacts/${contact.id}`,contact);\r\n        const {id} = response.data;\r\n        setContacts(contacts.map((contact) => {\r\n          return contact.id === id ? {...response.data} : contact;\r\n        })\r\n        );\r\n    };\r\n\r\n    const removeContactHandler = async (id) => {\r\n        await api.delete(`/contacts/${id}`);\r\n        const newContactList = contacts.filter((contact) =>  contact.id !== id\r\n        );\r\n    \r\n        setContacts(newContactList);\r\n    };\r\n\r\n    const value={\r\n        contacts,\r\n        getContacts,\r\n        removeContactHandler,\r\n        addContactHandler,\r\n        editContactHandler\r\n    }\r\n    return <contactsCrudContext.Provider value={value}>\r\n        {children}\r\n    </contactsCrudContext.Provider>\r\n}\r\n\r\nexport function useContactsCrud() {\r\n    return useContext(contactsCrudContext);\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAACC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,mBAAmB,gBAAGP,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASQ,2BAA2BA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAClD,MAAM,CAACG,QAAQ,EAACC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,WAAW,CAAC;IAC3C,IAAGD,QAAQ,CAACE,IAAI,EAAC;MACfJ,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC5B;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IACzCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,MAAMG,OAAO,GAAG;MACdC,EAAE,EAAEnB,IAAI,CAAC,CAAC;MACV,GAAGQ;IACL,CAAC;IACD,MAAMG,QAAQ,GAAG,MAAMZ,GAAG,CAACqB,IAAI,CAAC,WAAW,EAAEF,OAAO,CAAC;IACrDT,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMQ,kBAAkB,GAAG,MAAON,OAAO,IAAK;IAC1C,MAAMJ,QAAQ,GAAG,MAAMZ,GAAG,CAACuB,GAAG,CAAE,aAAYP,OAAO,CAACI,EAAG,EAAC,EAACJ,OAAO,CAAC;IACjE,MAAM;MAACI;IAAE,CAAC,GAAGR,QAAQ,CAACE,IAAI;IAC1BJ,WAAW,CAACD,QAAQ,CAACe,GAAG,CAAER,OAAO,IAAK;MACpC,OAAOA,OAAO,CAACI,EAAE,KAAKA,EAAE,GAAG;QAAC,GAAGR,QAAQ,CAACE;MAAI,CAAC,GAAGE,OAAO;IACzD,CAAC,CACD,CAAC;EACL,CAAC;EAED,MAAMS,oBAAoB,GAAG,MAAOL,EAAE,IAAK;IACvC,MAAMpB,GAAG,CAAC0B,MAAM,CAAE,aAAYN,EAAG,EAAC,CAAC;IACnC,MAAMO,cAAc,GAAGlB,QAAQ,CAACmB,MAAM,CAAEZ,OAAO,IAAMA,OAAO,CAACI,EAAE,KAAKA,EACpE,CAAC;IAEDV,WAAW,CAACiB,cAAc,CAAC;EAC/B,CAAC;EAED,MAAME,KAAK,GAAC;IACRpB,QAAQ;IACRE,WAAW;IACXc,oBAAoB;IACpBV,iBAAiB;IACjBO;EACJ,CAAC;EACD,oBAAOnB,OAAA,CAACC,mBAAmB,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAC7CA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AACnC;AAAC3B,EAAA,CA/CeF,2BAA2B;AAAA8B,EAAA,GAA3B9B,2BAA2B;AAiD3C,OAAO,SAAS+B,eAAeA,CAAA,EAAG;EAAAC,GAAA;EAC9B,OAAOvC,UAAU,CAACM,mBAAmB,CAAC;AAC1C;AAACiC,GAAA,CAFeD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}